---
import "../styles/global.css";
import { ViewTransitions } from "astro:transitions";
import { DashboardLayout } from "@/components/dashboard-layout";

export interface Props {
	title: string;
}

const { title } = Astro.props;
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<title>{title}</title>
		<ViewTransitions />

		<!-- View transition script to trigger React updates -->
		<script is:inline>
			document.addEventListener("astro:page-load", () => {
				// Force React components to update after view transitions
				if (typeof window !== "undefined") {
					window.dispatchEvent(new CustomEvent("astro-page-load"));
				}
			});
		</script>

		<!-- Prevent theme flash by setting theme immediately -->
		<script is:inline>
			(function () {
				function getThemePreference() {
					const stored = localStorage.getItem("k8s-dashboard-theme");
					if (stored && (stored === "light" || stored === "dark")) {
						return stored;
					}
					if (stored === "system" || !stored) {
						return window.matchMedia("(prefers-color-scheme: dark)")
							.matches
							? "dark"
							: "light";
					}
					return "light";
				}

				const theme = getThemePreference();
				document.documentElement.classList.add(theme);
			})();
		</script>
		<script is:inline>
			(function () {
				try {
					const s = JSON.parse(
						localStorage.getItem("kaptn.sidebar") || "null",
					);
					if (s && s.collapsed)
						document.documentElement.classList.add(
							"sidebar-collapsed",
						);
				} catch {}
				// kill transitions until React mounts
				document.documentElement.classList.add("no-transitions");
			})();
		</script>
	</head>
	<body>
		<DashboardLayout client:load>
			<slot />
		</DashboardLayout>
	</body>
</html>
