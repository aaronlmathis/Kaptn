apiVersion: v1
kind: ConfigMap
metadata:
  name: kaptn-user-bindings
  namespace: default
data:
  # Key is SHA256 hash of formatted username: email:aaron.mathis@gmail.com
  # This approach is commonly used to handle special characters in ConfigMap keys
  "dd80007678b17f98898eb5e8b5de0a32fbbbc74cdc7c135b8d3e5ad27469eeb9": |
    {
      "user_id": "aaron.mathis@gmail.com",
      "email": "aaron.mathis@gmail.com", 
      "groups": ["kaptn-admins", "cluster-admins"],
      "namespaces": ["default", "kube-system", "monitoring", "istio-system", "kaptn"]
    }
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kaptn-admins-cluster-admin
subjects:
- kind: Group
  apiGroup: rbac.authorization.k8s.io
  name: kaptn-admins
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata: { name: kaptn-admins-cluster-admin }
subjects:
- kind: Group
  name: kaptn-admins
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata: { name: kaptn-admin }
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
- nonResourceURLs: ["*"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata: { name: kaptn-admins-full }
subjects:
- kind: Group
  name: kaptn-admins
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: kaptn-admin
  apiGroup: rbac.authorization.k8s.io