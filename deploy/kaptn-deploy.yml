# 1. Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: kaptn
---
# 2) ServiceAccount (no change)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kaptn-sa
  namespace: kaptn
---
# 3) ClusterRole with expanded permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kaptn-metrics-role
rules:
  # core pods & nodes
  - apiGroups: [""]
    resources: ["pods", "nodes"]
    verbs: ["get", "list", "watch"]
  # metrics.k8s.io pods & nodes
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods", "nodes"]
    verbs: ["get", "list"]
  # resourcequotas & namespaces for cluster summary
  - apiGroups: [""]
    resources: ["resourcequotas", "namespaces"]
    verbs: ["get", "list", "watch"]

---
# 4) ClusterRoleBinding (no change)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kaptn-metrics-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kaptn-metrics-role
subjects:
  - kind: ServiceAccount
    name: kaptn-sa
    namespace: kaptn
---
# # 2. ConfigMap
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: kaptn-config
#   namespace: kaptn
# data:
#   config.yaml: |
#     server:
#       addr: "0.0.0.0:8080"
#     kubernetes:
#       mode: "incluster"
#     integrations:
#       prometheus:
#         url: "http://monitoring-kube-prometheus-prometheus.monitoring.svc:9090"
# ---
# 5) Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kaptn
  namespace: kaptn
  labels:
    app: kaptn
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kaptn
  template:
    metadata:
      labels:
        app: kaptn
    spec:
      serviceAccountName: kaptn-sa
      terminationGracePeriodSeconds: 10 
      containers:
      - name: kaptn
        image: docker.io/aaronlmathis/kaptn:debug
        imagePullPolicy: Always
        args:
          - "--config=/etc/kaptn/config.yaml"
        ports:
          - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 20
          failureThreshold: 5
          periodSeconds: 10
        livenessProbe:
          exec:
            command: ["/server", "--health-check"]
          initialDelaySeconds: 20
          periodSeconds: 30
        volumeMounts:
          - name: config
            mountPath: /etc/kaptn
            readOnly: true
      volumes:
        - name: config
          configMap:
            name: kaptn-config
---
# 6) Service
apiVersion: v1
kind: Service
metadata:
  name: kaptn
  namespace: kaptn
spec:
  selector:
    app: kaptn
  ports:
    - port: 80
      targetPort: 8080
      nodePort: 30080
  type: NodePort

---
# 7) Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kaptn
  namespace: kaptn
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: kaptn.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kaptn
                port:
                  number: 80
